import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Progress } from "@/components/ui/progress";
import { 
  TrendingUp, 
  TrendingDown, 
  Users, 
  FileText, 
  Target, 
  Clock,
  AlertTriangle,
  CheckCircle2
} from "lucide-react";

const kpiData = {
  precision: 0.73,
  coverage: 0.82,
  timeToFirstLook: 25, // minutes
  autoGeneratedProposals: 0.87,
  integrationSuccess: 0.995,
  slaUptime: 0.998
};

const weeklyStats = {
  totalTenders: 1247,
  filteredTenders: 186,
  proposals: 23,
  crmIntegrated: 19,
  avgProcessingTime: 4.2 // minutes
};

const platformStats = [
  { name: "ЭТП ГПБ", tenders: 342, success: 0.95, status: "active" },
  { name: "Сбербанк АСТ", tenders: 298, success: 0.89, status: "active" },
  { name: "РТС-Тендер", tenders: 187, success: 0.92, status: "active" },
  { name: "B2B-Center", tenders: 156, success: 0.78, status: "warning" },
  { name: "Росэлторг", tenders: 89, success: 0.67, status: "error" }
];

export default function Dashboard() {
  return (
    <div className="space-y-6">
      <div>
        <h1 className="text-2xl font-bold text-foreground">Дашборд KPI</h1>
        <p className="text-muted-foreground">
          Ключевые показатели эффективности тендерной платформы
        </p>
      </div>

      {/* Main KPI Cards */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Точность отбора</CardTitle>
            <Target className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">
              {(kpiData.precision * 100).toFixed(1)}%
            </div>
            <div className="flex items-center gap-2 mt-2">
              <Progress value={kpiData.precision * 100} className="flex-1" />
              <Badge variant={kpiData.precision >= 0.7 ? "default" : "destructive"}>
                {kpiData.precision >= 0.7 ? "Цель достигнута" : "Ниже цели"}
              </Badge>
            </div>
            <p className="text-xs text-muted-foreground mt-1">
              Цель: ≥70%
            </p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Покрытие</CardTitle>
            <Users className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">
              {(kpiData.coverage * 100).toFixed(1)}%
            </div>
            <div className="flex items-center gap-2 mt-2">
              <Progress value={kpiData.coverage * 100} className="flex-1" />
              <Badge variant={kpiData.coverage >= 0.7 ? "default" : "destructive"}>
                {kpiData.coverage >= 0.7 ? "Цель достигнута" : "Ниже цели"}
              </Badge>
            </div>
            <p className="text-xs text-muted-foreground mt-1">
              Цель: ≥70% релевантных тендеров
            </p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Время обработки</CardTitle>
            <Clock className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">
              {kpiData.timeToFirstLook} мин
            </div>
            <div className="flex items-center gap-2 mt-2">
              <Progress value={100 - (kpiData.timeToFirstLook / 30 * 100)} className="flex-1" />
              <Badge variant={kpiData.timeToFirstLook <= 30 ? "default" : "destructive"}>
                {kpiData.timeToFirstLook <= 30 ? "Цель достигнута" : "Превышение"}
              </Badge>
            </div>
            <p className="text-xs text-muted-foreground mt-1">
              Цель: ≤30 минут
            </p>
          </CardContent>
        </Card>
      </div>

      {/* Weekly funnel and integration stats */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <Card>
          <CardHeader>
            <CardTitle>Воронка обработки за неделю</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="flex items-center justify-between">
              <span className="text-sm">Всего найдено</span>
              <div className="flex items-center gap-2">
                <span className="font-bold">{weeklyStats.totalTenders.toLocaleString()}</span>
                <TrendingUp className="h-4 w-4 text-success" />
              </div>
            </div>
            
            <div className="flex items-center justify-between">
              <span className="text-sm">Отобрано ИИ</span>
              <div className="flex items-center gap-2">
                <span className="font-bold">{weeklyStats.filteredTenders}</span>
                <Badge variant="outline">
                  {((weeklyStats.filteredTenders / weeklyStats.totalTenders) * 100).toFixed(1)}%
                </Badge>
              </div>
            </div>
            
            <div className="flex items-center justify-between">
              <span className="text-sm">Создано КП</span>
              <div className="flex items-center gap-2">
                <span className="font-bold">{weeklyStats.proposals}</span>
                <Badge variant="outline">
                  {((weeklyStats.proposals / weeklyStats.filteredTenders) * 100).toFixed(1)}%
                </Badge>
              </div>
            </div>
            
            <div className="flex items-center justify-between">
              <span className="text-sm">Отправлено в CRM</span>
              <div className="flex items-center gap-2">
                <span className="font-bold">{weeklyStats.crmIntegrated}</span>
                <Badge variant="outline">
                  {((weeklyStats.crmIntegrated / weeklyStats.proposals) * 100).toFixed(1)}%
                </Badge>
              </div>
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle>Производительность интеграций</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="flex items-center justify-between">
              <span className="text-sm">Автогенерация КП</span>
              <div className="flex items-center gap-2">
                <span className="font-bold">
                  {(kpiData.autoGeneratedProposals * 100).toFixed(1)}%
                </span>
                <CheckCircle2 className="h-4 w-4 text-success" />
              </div>
            </div>
            
            <div className="flex items-center justify-between">
              <span className="text-sm">Успешность Bitrix24</span>
              <div className="flex items-center gap-2">
                <span className="font-bold">
                  {(kpiData.integrationSuccess * 100).toFixed(2)}%
                </span>
                <CheckCircle2 className="h-4 w-4 text-success" />
              </div>
            </div>
            
            <div className="flex items-center justify-between">
              <span className="text-sm">SLA Uptime</span>
              <div className="flex items-center gap-2">
                <span className="font-bold">
                  {(kpiData.slaUptime * 100).toFixed(3)}%
                </span>
                <Badge variant={kpiData.slaUptime >= 0.995 ? "default" : "destructive"}>
                  {kpiData.slaUptime >= 0.995 ? "SLA выполнен" : "SLA нарушен"}
                </Badge>
              </div>
            </div>
            
            <div className="flex items-center justify-between">
              <span className="text-sm">Среднее время обработки</span>
              <div className="flex items-center gap-2">
                <span className="font-bold">{weeklyStats.avgProcessingTime} мин</span>
                <Badge variant={weeklyStats.avgProcessingTime <= 5 ? "default" : "destructive"}>
                  {weeklyStats.avgProcessingTime <= 5 ? "p95 норма" : "p95 превышение"}
                </Badge>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Platform performance */}
      <Card>
        <CardHeader>
          <CardTitle>Производительность площадок</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            {platformStats.map((platform, index) => (
              <div key={index} className="flex items-center justify-between">
                <div className="flex items-center gap-3">
                  <div className={`w-2 h-2 rounded-full ${
                    platform.status === 'active' ? 'bg-success' :
                    platform.status === 'warning' ? 'bg-warning' : 'bg-destructive'
                  }`} />
                  <span className="font-medium">{platform.name}</span>
                </div>
                
                <div className="flex items-center gap-4">
                  <span className="text-sm text-muted-foreground">
                    {platform.tenders} тендеров
                  </span>
                  
                  <div className="flex items-center gap-2">
                    <Progress value={platform.success * 100} className="w-20" />
                    <span className="text-sm font-medium min-w-12">
                      {(platform.success * 100).toFixed(0)}%
                    </span>
                  </div>
                  
                  {platform.status === 'warning' && (
                    <AlertTriangle className="h-4 w-4 text-warning" />
                  )}
                  {platform.status === 'error' && (
                    <AlertTriangle className="h-4 w-4 text-destructive" />
                  )}
                </div>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>
    </div>
  );
}